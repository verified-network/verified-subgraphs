type Currency @entity {
  id: ID!
  name: Bytes
  cashIssues: [CashIssues!] @derivedFrom(field: "currency")
  cashDeposits: [CashDeposited!] @derivedFrom(field: "currency")
  cashRedemptions: [CashRedemptions!] @derivedFrom(field: "currency")
  cashTransfers: [CashTransfers!] @derivedFrom(field: "currency")  
  bondIssues: [BondIssues!] @derivedFrom(field: "collateralCurrency")
  bondPurchases: [BondPurchases!] @derivedFrom(field: "paidInCurrency")
  bondRedemptions: [BondRedemptions!] @derivedFrom(field: "redemptionCurrency")
  bondIssueRequests: [BondIssueRequests!] @derivedFrom(field: "currency")
  #trades: [Trades!] @derivedFrom(field: "currency")
  #primarySubscribers: [Subscribers!] @derivedFrom(field: "currency")
  #secondaryInvestors: [Investors!] @derivedFrom(field: "currency")
  #primaryAllotments: [Allotments!] @derivedFrom(field: "currency")
  #primaryRefunds: [Refunds!] @derivedFrom(field: "currency")
}
type User @entity {
  id: ID!
  client: Bytes
  name: Bytes
  surname: Bytes
  country: Bytes
  status: Int
  cashIssues: [CashIssues!] @derivedFrom(field:"party")
  cashDeposits: [CashDeposited!] @derivedFrom(field: "party")
  cashRedemptions: [CashRedemptions!] @derivedFrom(field: "party")
  cashTransfers: [CashTransfers!] @derivedFrom(field: "transferor")
  bondIssues: [BondIssues!] @derivedFrom(field: "issuer")
  bondPurchases: [BondPurchases!] @derivedFrom(field: "purchaser")
  bondRedemptions: [BondRedemptions!] @derivedFrom(field: "redeemer")
  bondIssueRequests: [BondIssueRequests!] @derivedFrom(field: "issuer")
  #offers: [Offers!] @derivedFrom(field: "offeredBy")
  #primarySubscribers: [Subscribers!] @derivedFrom(field: "investor")
  #secondaryInvestors: [Investors!] @derivedFrom(field: "investor")
  #liquidityProviders: [LiquidityProviders!] @derivedFrom(field: "owner")
  manager: [Manager!] @derived(field: "manager")
  submanager: [Manager!] @derivedFrom(field: "submanager")
  #securityissuer: [Issuer!] @derivedFrom(field: "issuer")
}
type Token @entity {
  id: ID!
  token: Bytes
  tokenName: Bytes 
  tokenType: Bytes
  bondIssues: [BondIssues!]! @derivedFrom(field: "token")
  bondPurchases: [BondPurchases!]! @derivedFrom(field: "token")
  bondRedemptions: [BondRedemptions!]! @derivedFrom(field: "token")
  #primarySubscribers: [Subscribers!] @derivedFrom(field: "security")
  #secondaryInvestors: [Investors!] @derivedFrom(field: "security")
  #trades: [Trades!] @derivedFrom(field: "security")
  #liquidityoffered: [LiquidityProviders!] @derivedFrom(field: "security")
  #securityissued: [Offers!] @derivedFrom(field: "offered")
  #security: [Security!] @derivedFrom(field: "security")
}
type CashDeposited @entity {
  id: ID!
  party: User!
  currency: Currency!
  amount : BigDecimal!
}
type CashIssues @entity {
  id: ID!
  party: User! 
  currency: Currency!
  amount : BigDecimal!
}
type CashRedemptions @entity {
  id: ID!
  party: User!
  currency: Currency!
  amount : BigDecimal!
}
type CashTransfers @entity {
  id: ID!
  transferor: User!
  transferee: User!
  currency: Currency!
  amount : BigDecimal!
}
type BondIssueRequests @entity {
  id: ID!
  issuer: User!
  currency: Currency!
  amount : BigDecimal! 
}
type BondIssues @entity {
  id: ID!
  token: Token!
  issuer: User!
  collateralCurrency: Currency!
  issuedAmount : BigDecimal!    
}
type BondPurchases @entity {
  id: ID!
  token: Token!
  purchaser: User!
  paidInCurrency: Currency!
  purchasedAmount : BigDecimal!
}
type BondRedemptions @entity {
  id: ID!
  token: Token!
  redeemer: User!
  redemptionCurrency: Currency!
  redemptionAmount : BigDecimal!
}
type Manager @entity {
  id: ID!
  manager: User
  #manager: Bytes
  submanager: User!
  #submanager: Bytes!
  role: Bytes!
  country: Bytes
  managerId: Bytes
}
type Security @entity {
  id: ID!
  security: Bytes!
  #issuer: User!
  issuer: Bytes!
  isin: Bytes!
  #currency: Currency! 
  currency: Bytes!
  restricted: Boolean!
  issueManager: Bytes!
  primarySubscribers: [Subscribers!] @derivedFrom(field: "security")
  secondaryInvestors: [Investors!] @derivedFrom(field: "security")
  trades: [Trades!] @derivedFrom(field: "security")
  liquidityOffered: [LiquidityProviders!] @derivedFrom(field: "security")
  #securityIssued: [Offers!] @derivedFrom(field: "offered")
  subscriptionsClosed: [Closures!] @derivedFrom(field: "security")
  primaryAllotments: [Allotments!] @derivedFrom(field: "security")
  primaryRefunds: [Refunds!] @derivedFrom(field: "security")
}
type Offers @entity {
  id: ID!
  #offeredBy: User!
  offeredBy: Bytes!
  #offered: Token!
  offered: Bytes!
  isin: Bytes!
  amount: BigDecimal! 
  desired: BigDecimal!
  minimum: BigDecimal!
  orderSize: BigInt!
  offeringDocs: String!
}
type Trades @entity {
  id: ID!
  poolid: Bytes!
  #transferor: User!
  transferor: Bytes!
  #transferee: User!
  transferee: Bytes!
  unitsToTransfer: BigInt!
  #security: Token!
  security: Security!
  price: BigDecimal!
  currency: Bytes!
  settlementStatus: Bytes!
}
type Subscribers @entity {
  id: ID!
  #security: Token!
  security: Security!
  pool: Bytes!
  #investor: User!
  investor: Bytes!
  #currency: Currency!
  currency: Bytes!
  cashSwapped: BigDecimal!   
  securitySwapped: BigDecimal! 
  timestamp: Int!
}
type Investors @entity {
  id: ID!
  pool: Bytes!
  #security: Token!
  security: Security!
  #issuer: User!
  issuer: Bytes!
  #investor: User!
  investor: Bytes!
  #currency: Currency!
  currency: Bytes!
  amount: BigDecimal!   
  price: BigDecimal! 
  tradeRef : Bytes!
  DPID : Bytes!
  timestamp: Int!
}
type LiquidityProviders @entity {
  id: ID!
  platform: Bytes!
  #owner: User!
  owner: Bytes!
  security: Security!
  #currency: Currency!
  currency: Bytes!
  #tokenOffered: Token!
  tokenOffered: BigDecimal!
  underwritten: BigDecimal
  earned: BigDecimal
}
type Closures @entity{
  id: ID!
  poolid: Bytes!
  security: Security!
  timestamp: Int! 
}
type Allotments @entity{
  id: ID!
  poolid: Bytes!
  investor: Bytes!
  #investor: User!
  security: Security!
  securitySubscribed: BigDecimal!
  currency: Bytes!
  #currency: Currency!
  allotedAmount: BigDecimal!
}
type Refunds @entity{
  id: ID!
  poolid: Bytes!
  investor: Bytes!
  #investor: User!
  security: Security!
  securitySubscribed: BigDecimal!
  currency: Bytes!
  #currency: Currency!
  refundAmount: BigDecimal!
}

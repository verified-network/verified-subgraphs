// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RevenueShare extends ethereum.Event {
  get params(): RevenueShare__Params {
    return new RevenueShare__Params(this);
  }
}

export class RevenueShare__Params {
  _event: RevenueShare;

  constructor(event: RevenueShare) {
    this._event = event;
  }

  get shareholderType(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get shareholder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Distribution__getRevenueSharesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Distribution extends ethereum.SmartContract {
  static bind(address: Address): Distribution {
    return new Distribution("Distribution", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRevenueShares(): Distribution__getRevenueSharesResult {
    let result = super.call(
      "getRevenueShares",
      "getRevenueShares():(uint256,uint256,uint256,uint256)",
      []
    );

    return new Distribution__getRevenueSharesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getRevenueShares(): ethereum.CallResult<
    Distribution__getRevenueSharesResult
  > {
    let result = super.tryCall(
      "getRevenueShares",
      "getRevenueShares():(uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Distribution__getRevenueSharesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getRevenueShareholders(_type: Bytes, _currency: Address): Array<Address> {
    let result = super.call(
      "getRevenueShareholders",
      "getRevenueShareholders(bytes32,address):(address[])",
      [
        ethereum.Value.fromFixedBytes(_type),
        ethereum.Value.fromAddress(_currency)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getRevenueShareholders(
    _type: Bytes,
    _currency: Address
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRevenueShareholders",
      "getRevenueShareholders(bytes32,address):(address[])",
      [
        ethereum.Value.fromFixedBytes(_type),
        ethereum.Value.fromAddress(_currency)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getPaymentFeeCollected(_currency: Bytes): BigInt {
    let result = super.call(
      "getPaymentFeeCollected",
      "getPaymentFeeCollected(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_currency)]
    );

    return result[0].toBigInt();
  }

  try_getPaymentFeeCollected(_currency: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPaymentFeeCollected",
      "getPaymentFeeCollected(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLoanFeeCollected(_currency: Bytes): BigInt {
    let result = super.call(
      "getLoanFeeCollected",
      "getLoanFeeCollected(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_currency)]
    );

    return result[0].toBigInt();
  }

  try_getLoanFeeCollected(_currency: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLoanFeeCollected",
      "getLoanFeeCollected(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIssuingFeeCollected(_platform: Address, _token: Address): BigInt {
    let result = super.call(
      "getIssuingFeeCollected",
      "getIssuingFeeCollected(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_platform),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toBigInt();
  }

  try_getIssuingFeeCollected(
    _platform: Address,
    _token: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIssuingFeeCollected",
      "getIssuingFeeCollected(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_platform),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTradingFeeCollected(_platform: Address, _token: Address): BigInt {
    let result = super.call(
      "getTradingFeeCollected",
      "getTradingFeeCollected(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_platform),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTradingFeeCollected(
    _platform: Address,
    _token: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTradingFeeCollected",
      "getTradingFeeCollected(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(_platform),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _business(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _royalty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _investor(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _operator(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _viaFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _founder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _treasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _liquidity(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class AddRevenueShareholderCall extends ethereum.Call {
  get inputs(): AddRevenueShareholderCall__Inputs {
    return new AddRevenueShareholderCall__Inputs(this);
  }

  get outputs(): AddRevenueShareholderCall__Outputs {
    return new AddRevenueShareholderCall__Outputs(this);
  }
}

export class AddRevenueShareholderCall__Inputs {
  _call: AddRevenueShareholderCall;

  constructor(call: AddRevenueShareholderCall) {
    this._call = call;
  }

  get _type(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _shareholder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AddRevenueShareholderCall__Outputs {
  _call: AddRevenueShareholderCall;

  constructor(call: AddRevenueShareholderCall) {
    this._call = call;
  }
}

export class GetIssuingFeeCollectedCall extends ethereum.Call {
  get inputs(): GetIssuingFeeCollectedCall__Inputs {
    return new GetIssuingFeeCollectedCall__Inputs(this);
  }

  get outputs(): GetIssuingFeeCollectedCall__Outputs {
    return new GetIssuingFeeCollectedCall__Outputs(this);
  }
}

export class GetIssuingFeeCollectedCall__Inputs {
  _call: GetIssuingFeeCollectedCall;

  constructor(call: GetIssuingFeeCollectedCall) {
    this._call = call;
  }

  get _platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GetIssuingFeeCollectedCall__Outputs {
  _call: GetIssuingFeeCollectedCall;

  constructor(call: GetIssuingFeeCollectedCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class GetTradingFeeCollectedCall extends ethereum.Call {
  get inputs(): GetTradingFeeCollectedCall__Inputs {
    return new GetTradingFeeCollectedCall__Inputs(this);
  }

  get outputs(): GetTradingFeeCollectedCall__Outputs {
    return new GetTradingFeeCollectedCall__Outputs(this);
  }
}

export class GetTradingFeeCollectedCall__Inputs {
  _call: GetTradingFeeCollectedCall;

  constructor(call: GetTradingFeeCollectedCall) {
    this._call = call;
  }

  get _platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GetTradingFeeCollectedCall__Outputs {
  _call: GetTradingFeeCollectedCall;

  constructor(call: GetTradingFeeCollectedCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ShareCollectionCall extends ethereum.Call {
  get inputs(): ShareCollectionCall__Inputs {
    return new ShareCollectionCall__Inputs(this);
  }

  get outputs(): ShareCollectionCall__Outputs {
    return new ShareCollectionCall__Outputs(this);
  }
}

export class ShareCollectionCall__Inputs {
  _call: ShareCollectionCall;

  constructor(call: ShareCollectionCall) {
    this._call = call;
  }
}

export class ShareCollectionCall__Outputs {
  _call: ShareCollectionCall;

  constructor(call: ShareCollectionCall) {
    this._call = call;
  }
}

export class ShareFeeCall extends ethereum.Call {
  get inputs(): ShareFeeCall__Inputs {
    return new ShareFeeCall__Inputs(this);
  }

  get outputs(): ShareFeeCall__Outputs {
    return new ShareFeeCall__Outputs(this);
  }
}

export class ShareFeeCall__Inputs {
  _call: ShareFeeCall;

  constructor(call: ShareFeeCall) {
    this._call = call;
  }
}

export class ShareFeeCall__Outputs {
  _call: ShareFeeCall;

  constructor(call: ShareFeeCall) {
    this._call = call;
  }
}

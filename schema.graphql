#type Cash @entity {
  #id: ID!
  #name: Bytes
  #cashIssues: [CashIssues!] @derivedFrom(field: "currency")
  #cashDeposits: [CashDeposited!] @derivedFrom(field: "currency")
  #cashRedemptions: [CashRedemptions!] @derivedFrom(field: "currency")
  #cashTransfers: [CashTransfers!] @derivedFrom(field: "currency")  
  #bondIssues: [BondIssues!] @derivedFrom(field: "collateralCurrency")
  #bondPurchases: [BondPurchases!] @derivedFrom(field: "paidInCurrency")
  #bondRedemptions: [BondRedemptions!] @derivedFrom(field: "redemptionCurrency")
  #BondLiquidations: [BondLiquidations!] @derivedFrom(field: "liquidationCurrency")
#}
type User @entity {
  id: ID!
  client: Bytes
  name: Bytes
  accountid: Bytes
  country: Bytes
  status: Int
  cashIssues: [CashIssues!] @derivedFrom(field:"party")
  cashDeposits: [CashDeposited!] @derivedFrom(field: "party")
  cashRedemptions: [CashRedemptions!] @derivedFrom(field: "party")
  cashTransfers: [CashTransfers!] @derivedFrom(field: "transferor")
  bondIssues: [BondIssues!] @derivedFrom(field: "issuer")
  bondPurchases: [BondPurchases!] @derivedFrom(field: "purchaser")
  bondRedemptions: [BondRedemptions!] @derivedFrom(field: "redeemer")
  BondLiquidations: [BondLiquidations!] @derivedFrom(field: "liquidator")
  offers: [Offers!] @derivedFrom(field: "offeredBy")
  securitySeller: [Trades!] @derivedFrom(field: "transferor")
  securityBuyer: [Trades!] @derivedFrom(field: "transferee")
  primarySubscribers: [Subscribers!] @derivedFrom(field: "investor")
  secondaryIssuers: [Investors!] @derivedFrom(field: "issuer")
  secondaryInvestors: [Investors!] @derivedFrom(field: "investor")
  tradeTransferor: [Traders!] @derivedFrom(field: "transferor")
  tradeTransferee: [Traders!] @derivedFrom(field: "transferee")
  liquidityProviders: [LiquidityProviders!] @derivedFrom(field: "owner")
  allotedTo: [Allotments!] @derivedFrom(field: "investor")
  refundedTo: [Refunds!] @derivedFrom(field: "investor")
  liquidityProviderSettled: [Settlements!] @derivedFrom(field: "liquidityProvider")
  issuerSettled: [Settlements!] @derivedFrom(field: "issuer")
  manager: [Manager!] @derived(field: "manager")
  submanager: [Manager!] @derivedFrom(field: "submanager")
  shareholder: [RevenueShares!] @derivedFrom(field: "shareholder")
  liquidityRequestor: [LiquidityTokenRequests!] @derivedFrom(field: "investor")
  liquidityIssuedTo: [LiquidityTokenIssues!] @derivedFrom(field: "investor")
  liquidityProvidedTo: [LiquidityOnPlatform!] @derivedFrom(field: "manager")
  earnedByManager: [ManagerRoI!] @derivedFrom(field: "manager")
  earnedByInvestor: [InvestorRoI!] @derivedFrom(field: "investor") 
  issuer: [Security!] @derivedFrom(field: "issuer")
}
type Token @entity {
  id: ID!
  token: Bytes
  tokenName: Bytes 
  tokenType: Bytes
  bondIssues: [BondIssues!]! @derivedFrom(field: "token")
  bondPurchases: [BondPurchases!]! @derivedFrom(field: "token")
  bondRedemptions: [BondRedemptions!]! @derivedFrom(field: "token")
  bondLiquidations: [BondLiquidations!] @derivedFrom(field: "token")
}
type Platform @entity {
  id: ID!
  platform: Bytes!
  name: Bytes!
  feeCollections: [FeeCollections!] @derivedFrom(field: "platform")
  investorReturns: [InvestorRoI!] @derivedFrom(field: "platform")
  managerReturns: [ManagerRoI!] @derivedFrom(field: "platform")
  platformReturns: [PlatformRoI!] @derivedFrom(field: "platform")
  platformLiquidity: [LiquidityOnPlatform!] @derivedFrom(field: "platform")
}
type Currency @entity {
  id: ID!
  token: Bytes
  name: String
  cashIssues: [CashIssues!] @derivedFrom(field: "currency")
  cashDeposits: [CashDeposited!] @derivedFrom(field: "currency")
  cashRedemptions: [CashRedemptions!] @derivedFrom(field: "currency")
  cashTransfers: [CashTransfers!] @derivedFrom(field: "currency")  
  liquidityTokenRequests: [LiquidityTokenRequests!] @derivedFrom(field: "token")
  liquidityTokenIssues: [LiquidityTokenIssues!] @derivedFrom(field: "token")
  liquidityOnPlatform: [LiquidityOnPlatform!] @derivedFrom(field: "token")
  liquidityEarningsByManager: [ManagerRoI!] @derivedFrom(field: "token")
}
type Security @entity {
  id: ID!
  security: Bytes!
  productCategory: Bytes!
  issuer: User
  isin: Bytes!
  currency: Bytes!
  restricted: Boolean!
  issueManager: Bytes!
  restrictions: [Bytes!]
  country: Bytes
  primarySubscribers: [Subscribers!] @derivedFrom(field: "security")
  secondaryInvestors: [Investors!] @derivedFrom(field: "security")
  marginTraders: [Traders!] @derivedFrom(field: "security")
  trades: [Trades!] @derivedFrom(field: "security")
  liquidityProviders: [LiquidityProviders!] @derivedFrom(field: "security")  
  liquidityOffered: [Offers!] @derivedFrom(field: "tomatch")
  subscriptionsClosed: [Closures!] @derivedFrom(field: "security")
  primaryAllotments: [Allotments!] @derivedFrom(field: "security")
  primaryRefunds: [Refunds!] @derivedFrom(field: "security")
  primarySettlements: [Settlements!] @derivedFrom(field: "security")
  resolutions: [Resolutions!] @derivedFrom(field: "security")
  snapshots : [Snapshots!] @derivedFrom(field: "security")
}
type CashDeposited @entity {
  id: ID!
  party: User!
  currency: Currency!
  amount : BigDecimal!  
}
type CashIssues @entity {
  id: ID!
  party: User! 
  currency: Currency!
  amount : BigDecimal!
  balance: BigDecimal!
}
type CashRedemptions @entity {
  id: ID!
  party: User
  currency: Currency!
  amount : BigDecimal!
  redeemedFor: BigDecimal!
  balance: BigDecimal!
}
type CashTransfers @entity {
  id: ID!
  transferor: User!
  transferee: User!
  currency: Currency!
  amount : BigDecimal!
  deposit: BigDecimal!
}
type BondIssues @entity {
  id: ID!
  issuer: User!
  token: Token!
  bondName: Bytes!
  issuedAmount: BigDecimal!  
  collateralCurrency: Bytes!
  collateralAmount : BigDecimal!
  issueTime: Int!     
}
type BondPurchases @entity {
  id: ID!
  purchaser: User!
  token: Token!
  bondName: Bytes!
  purchaseValue: BigDecimal!
  paidInCurrency: Bytes!
  purchasedAmount : BigDecimal!
  purchaseTime: Int!
}
type BondRedemptions @entity {
  id: ID!
  redeemer: User!
  token: Token!
  bondName: Bytes!
  redeemedValue: BigDecimal!
  redemptionCurrency: Bytes!
  redemptionAmount : BigDecimal!
}
type BondLiquidations @entity {
  id: ID!
  liquidator: User!
  token: Token!
  liquidatedValue: BigDecimal!
  bondName: Bytes!
  liquidationCurrency: Bytes!
  liquidatedAmount : BigDecimal! 
}
type Manager @entity {
  id: ID!
  manager: User
  submanager: User
  role: Bytes!
  country: Bytes
  managerId: Bytes
}
type Offers @entity {
  id: ID!
  offeredBy: User
  offered: Bytes!
  tomatch: Security!
  isin: Bytes!
  amount: BigDecimal! 
  desired: BigDecimal!
  minimum: BigDecimal!
  orderSize: BigInt!
  offeringDocs: String!
}
type Trades @entity {
  id: ID!
  poolid: Bytes!
  transferor: User
  transferee: User
  unitsToTransfer: BigInt!
  security: Security!
  price: BigDecimal
  currency: Bytes!
  settlementStatus: Bytes
  amountPaid: BigDecimal
  tradeRef: Bytes!
  orderRef: Bytes
  tradingCommission: BigDecimal!
  timestamp: Int!
}
type Subscribers @entity {
  id: ID!
  security: Security!
  pool: Bytes!
  investor: User
  currency: Bytes!
  cashSwapped: BigDecimal!   
  securitySwapped: BigDecimal! 
  timestamp: Int!
  bought: Boolean!
}
type Investors @entity {
  id: ID!
  pool: Bytes!
  security: Security!
  issuer: User
  investor: User
  currency: Bytes!
  amount: BigDecimal!   
  price: BigDecimal! 
  tradeRef : Bytes!
  DPID : Bytes!
  timestamp: Int!
}
type Traders @entity {
  id: ID!
  transferor: User
  transferee: User
  security: Security!
  securityTraded: BigDecimal!
  currency: Bytes!
  cashTraded: BigDecimal!
  orderRef: Bytes!
  timestamp: Int!
}
type LiquidityProviders @entity {
  id: ID!
  platform: Bytes!
  owner: User
  security: Security!
  currency: Bytes!
  tokenOffered: BigDecimal!
  underwritten: BigDecimal
  earned: BigDecimal
}
type Closures @entity{
  id: ID!
  poolid: Bytes!
  security: Security!
  timestamp: Int! 
}
type Allotments @entity{
  id: ID!
  poolid: Bytes!
  investor: User
  security: Security!
  securitySubscribed: BigDecimal!
  currency: Bytes!
  allotedAmount: BigDecimal!
  timestamp: Int!
}
type Refunds @entity{
  id: ID!
  poolid: Bytes!
  investor: User
  security: Security!
  securitySubscribed: BigDecimal!
  currency: Bytes!
  refundAmount: BigDecimal!
  timestamp: Int!
}
type Settlements @entity{
  id: ID!
  poolid: Bytes!
  security: Security!
  currency: Bytes!
  liquidityProvider: User
  underwritingFee: BigDecimal!
  issuer: User
  subscription: BigDecimal!  
}
type MarginCollateral @entity{
  id: ID!
  action: Bytes!
  user: User
  currency: Bytes!
  balance: BigDecimal!
  time: Int
}
type MarginTradePnL @entity{
  id: ID!
  user: User
  security: Security!
  currency: Bytes!
  financing: BigDecimal!
  dividend: BigDecimal!
  commission: BigDecimal!
  settlementTime : Int
}
type Snapshots @entity{
  id: ID!
  security: Security!
  oldTime: Int
  newTime: Int
}
type Resolutions @entity{
  id: ID!
  security: Security!
  recordDate: Int!
  resolution: String!
  voting: Boolean
}
type RevenueShares @entity{
  id: ID!
  shareholder: User!
  shareholderType: Bytes!
  token: Bytes!
  amount: BigDecimal!
  timestamp: Int!
}
type LiquidityTokenRequests @entity{
  id: ID!
  investor: User!
  token: Currency!
  tokenAmount: BigDecimal!
  timestamp: Int!
}
type LiquidityTokenIssues @entity{
  id: ID!
  investor: User!
  token: Currency!
  tokenAmount: BigDecimal!
  LPToIssue: BigDecimal!
}
type LiquidityOnPlatform @entity{
  id: ID!
  platform: Platform!
  manager: User!
  LPToken: BigDecimal!
  token: Currency!
  tokenAmount: BigDecimal!
}
type ManagerRoI @entity{
  id: ID!
  platform: Platform!
  manager: User!
  token: Currency!
  distribution: BigDecimal!
}
type PlatformRoI @entity{
  id: ID!
  platform: Platform!
  vitta: Bytes!
  distribution: BigDecimal!
}
type InvestorRoI @entity{
  id: ID!
  platform: Platform!
  investor: User!
  vitta: Bytes!
  prorataStake: BigDecimal!
  timestamp: Int!
}
type FeeCollections @entity{
  id: ID!
  platform: Platform!
  feeCollected: BigDecimal
  timestamp: Int
}
type ManagersOnPlatform @entity{
  id: ID!
  platform: Platform!
  manager: User!
}
type RWA @entity{
  id: ID!
  issuer: User!
  asset: Security!
  bond: Token!
  apy: BigDecimal!
  issuingDocs:String!
  faceValue: BigDecimal!
}
type Collateral @entity{
  id: ID!
  issuer: User!
  asset: Security!
  collateral: Bytes!
  amount: BigDecimal!
}
type CollaterizedLoan @entity{
  id: ID!
  borrower: User!
  base: Bytes! 
  amount: BigDecimal!
}
type CollaterizedLoanRepayment @entity{
  id: ID!
  borrower: User!
  base: Bytes! 
  amount: BigDecimal!
}
